{"version":3,"sources":["components/Header/header.module.css","components/Filter/filter.module.css","components/App/main.module.css","components/ContactsForm/form.module.css","components/Notification/notification.module.css","components/ContactsList/animation.module.css","components/Header/Section.js","components/ContactsForm/ContactsForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/Notification/Notification.js","components/App/App.js","index.js","components/ContactsList/list.module.css"],"names":["module","exports","Section","CSSTransition","in","appear","timeout","classNames","styles","unmountOnExit","className","title","ContactForm","state","name","number","changeHandler","e","target","value","setState","submitHandler","preventDefault","contact","id","uuidv4","props","addContact","reset","this","mainForm","onSubmit","nameLabel","nameInput","type","placeholder","onChange","numberLabel","telInput","addBtn","disabled","length","Component","ContactList","contacts","onDelete","TransitionGroup","component","contactList","map","animation","contactListItem","closeBtn","onClick","style","display","Filter","Notification","alert","unmountOnEnter","App","filter","deleteContactbyId","updatedContacts","newName","toLowerCase","includes","setTimeout","filterContactsByName","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","container","contactsTitle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.234665a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"header_title__3NSJR\",\"appear\":\"header_appear__3k4Pd\",\"appearActive\":\"header_appearActive__251Ls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameLabel\":\"filter_nameLabel__3iN9n\",\"nameInput\":\"filter_nameInput__29vUo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"main_container__23t_y\",\"contactsTitle\":\"main_contactsTitle__3X9mu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"form_mainForm__1Jo52\",\"nameLabel\":\"form_nameLabel__1hdwA\",\"numberLabel\":\"form_numberLabel__3dOh7\",\"nameInput\":\"form_nameInput__1Gz1U\",\"telInput\":\"form_telInput__2OhFw\",\"addBtn\":\"form_addBtn__1iry6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"notification_alert__rVSkQ\",\"enter\":\"notification_enter__9XLUa\",\"enterActive\":\"notification_enterActive__3sl4p\",\"exit\":\"notification_exit__3Sufr\",\"exitActive\":\"notification_exitActive__3f8m6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"animation_enter__lVCZa\",\"enterActive\":\"animation_enterActive__1Y3-s\",\"exit\":\"animation_exit__1b1rC\",\"exitActive\":\"animation_exitActive__o62ZJ\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './header.module.css';\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst Section = () => {\r\n  return (\r\n    <CSSTransition\r\n    in={true}\r\n    appear={true}\r\n    timeout={500}\r\n    classNames={styles}\r\n    unmountOnExit\r\n    >\r\n      <h2 className={styles.title}>Phonebook</h2>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styles from \"./form.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.props.addContact(contact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.mainForm} onSubmit={this.submitHandler}>\r\n        <label className={styles.nameLabel}>\r\n          Name:\r\n          <input\r\n            className={styles.nameInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"enter name...\"\r\n            onChange={this.changeHandler}\r\n            id=\"nameInput\"\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.numberLabel}>\r\n          Number:\r\n          <input\r\n            className={styles.telInput}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"enter number...\"\r\n            onChange={this.changeHandler}\r\n            id=\"numberInput\"\r\n          />\r\n        </label>\r\n        <button className={styles.addBtn} type=\"submit\" disabled={!name.length || !number.length}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {TransitionGroup,CSSTransition } from 'react-transition-group';\r\nimport animation from './animation.module.css';\r\nimport styles from './list.module.css';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.contactList}>\r\n    {contacts.map((contact) => (\r\n      <CSSTransition key={contact.id} classNames={animation} timeout={250} unmountOnExit>\r\n        <li className={styles.contactListItem}>\r\n          <span className={styles.name}>{contact.name}</span>\r\n          <span className={styles.number}>{contact.number}</span>\r\n          <button className={styles.closeBtn} type=\"button\" onClick={() => onDelete(contact.id)}>\r\n            &#215;\r\n          </button>\r\n        </li>\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './filter.module.css';\r\n\r\nconst style = {\r\n  display: \"block\",\r\n};\r\n\r\nconst Filter = ({ onChange }) => {\r\n  return (\r\n    <label className={styles.nameLabel}>\r\n      Find contacts by name\r\n      <input className={styles.nameInput}\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        name=\"filter\"\r\n        style={style}\r\n        id=\"filterInput\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./notification.module.css\";\r\n\r\nconst Notification = ({ alert }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={alert}\r\n      classNames={styles}\r\n      timeout={400}\r\n      unmountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <div className={styles.alert}>\r\n        <h3>Contact already exist!</h3>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n\r\n","import React, {Component} from 'react';\r\nimport Section from '../Header/Section.js';\r\nimport ContactForm from '../ContactsForm/ContactsForm.js';\r\nimport ContactList from '../ContactsList/ContactsList.js';\r\nimport Filter from '../Filter/Filter.js';\r\nimport styles from './main.module.css';\r\nimport Notification from './../Notification/Notification.js';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n      contacts: [],\r\n      filter: \"\",\r\n      alert: false,\r\n    };\r\n  \r\n    componentDidMount(){\r\n      const contacts = localStorage.getItem('contacts');\r\n\r\n      if(contacts){\r\n        this.setState({contacts: JSON.parse(contacts)})\r\n      }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n      const {contacts} = this.state;\r\n      if(prevState.contacts !== contacts){\r\n        localStorage.setItem('contacts', JSON.stringify(contacts));\r\n      }\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n      const { name, value } = e.target;\r\n      this.setState({\r\n        [name]: value,\r\n      });\r\n    };\r\n  \r\n    deleteContactbyId = (id) => {\r\n      const { contacts } = this.state;\r\n      const updatedContacts = contacts.filter((contact) => contact.id !== id);\r\n      this.setState({\r\n        contacts: [...updatedContacts],\r\n      });\r\n    };\r\n  \r\n    addContact = (contact) => {\r\n      const newName = contact.name;\r\n      const names = this.state.contacts.map((contact) =>\r\n        contact.name.toLowerCase()\r\n      );\r\n      if (names.includes(newName.toLowerCase())) {\r\n        this.setState({ alert: true });\r\n        setTimeout(() => {\r\n          this.setState({ alert: false });\r\n        }, 3000);\r\n      } else {\r\n        this.setState((state) => ({\r\n          contacts: [...state.contacts, contact],\r\n        }));\r\n      }\r\n    };\r\n  \r\n    filterContactsByName = () => {\r\n      const { contacts, filter } = this.state;\r\n      if (contacts.length) {\r\n        return contacts.filter((contact) =>\r\n          contact.name.toLowerCase().includes(filter.toLowerCase())\r\n        );\r\n      }\r\n    };\r\n  \r\n    render() {\r\n      const { contacts, alert } = this.state;\r\n    \r\n      return (\r\n        <div className={styles.container}>\r\n          <Section title=\"Phonebook\"/>\r\n          <Notification alert={alert} />\r\n            <ContactForm addContact={this.addContact} />\r\n         <div> <h2 className={styles.contactsTitle}>Contacts</h2>\r\n            {contacts.length > 1 && <Filter onChange={this.changeHandler} />}\r\n            {contacts.length ? \r\n            <ContactList\r\n              contacts={this.filterContactsByName()}\r\n              onDelete={this.deleteContactbyId}\r\n            /> : (<p>There is no contacts</p>)\r\n          }\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.js';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"list_contactList__1nFki\",\"contactListItem\":\"list_contactListItem__29p_o\",\"name\":\"list_name__Dpx4r\",\"number\":\"list_number__Q13Ek\",\"closeBtn\":\"list_closeBtn__3bDp8\"};"],"sourceRoot":""}